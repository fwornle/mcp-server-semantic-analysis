@startuml tool-overview
!include _standard-style.puml

title MCP Server Tools - Complete Overview (10-Agent System)

package "Connection & Health Tools" <<api>> {
  component [heartbeat] as HEARTBEAT <<api>>
  component [test_connection] as TEST <<api>>
}

package "Analysis Tools" <<core>> {
  component [determine_insights] as INSIGHTS <<core>>
  component [analyze_code] as CODE <<core>>
  component [analyze_repository] as REPO <<core>>
  component [extract_patterns] as PATTERNS <<core>>
}

package "Knowledge Management Tools" <<storage>> {
  component [create_ukb_entity_with_insight] as UKB <<storage>>
  component [execute_workflow] as WORKFLOW <<util>>
}

package "Documentation & Reporting Tools" <<util>> {
  component [generate_documentation] as DOCS <<util>>
  component [create_insight_report] as REPORT <<util>>
  component [generate_plantuml_diagrams] as DIAGRAMS <<util>>
  component [generate_lessons_learned] as LESSONS <<util>>
}

package "10-Agent Support Layer" <<agent>> {
  package "Orchestration (1)" {
    component [Coordinator Agent] as COORD_AGENT <<agent>> #FFE6CC
  }
  package "Core Analysis Agents (8)" {
    component [Git History Agent] as GIT_AGENT <<agent>> #E6F3FF
    component [Vibe History Agent] as VIBE_AGENT <<agent>> #E6F3FF
    component [Semantic Analysis Agent] as SEMANTIC_AGENT <<agent>> #FFE6E6
    component [Web Search Agent] as WEB_AGENT <<agent>> #E6F3FF
    component [Insight Generation Agent] as INSIGHT_AGENT <<agent>> #FFE6E6
    component [Observation Generation Agent] as OBS_AGENT <<agent>> #E6F3FF
    component [Quality Assurance Agent] as QA_AGENT <<agent>> #FFE6E6
    component [Persistence Agent] as PERSIST_AGENT <<agent>> #E6F3FF
  }
  package "Infrastructure (1)" {
    component [Deduplication Agent] as DEDUP_AGENT <<agent>> #E6F3FF
  }
}

' Tool to Agent mappings
HEARTBEAT --> COORD_AGENT
TEST --> COORD_AGENT

INSIGHTS --> SEMANTIC_AGENT
CODE --> SEMANTIC_AGENT
REPO --> GIT_AGENT
PATTERNS --> SEMANTIC_AGENT

UKB --> PERSIST_AGENT
WORKFLOW --> COORD_AGENT

DOCS --> INSIGHT_AGENT
REPORT --> INSIGHT_AGENT
DIAGRAMS --> INSIGHT_AGENT
LESSONS --> INSIGHT_AGENT

' Agent workflow coordination
COORD_AGENT --> GIT_AGENT : "1. Git Analysis"
COORD_AGENT --> VIBE_AGENT : "2. Conversation Analysis"
COORD_AGENT --> SEMANTIC_AGENT : "3. Semantic Correlation (LLM)"
COORD_AGENT --> WEB_AGENT : "4. External Research"
COORD_AGENT --> INSIGHT_AGENT : "5. Insight Generation (LLM)"
COORD_AGENT --> OBS_AGENT : "6. Observation Creation"
COORD_AGENT --> QA_AGENT : "7. Quality Assurance (LLM)"
COORD_AGENT --> PERSIST_AGENT : "8. GraphDB Persistence"
COORD_AGENT --> DEDUP_AGENT : "9. Deduplication"

note top of HEARTBEAT
  Server health monitoring
  Uptime tracking
  Connection validation
end note

note top of INSIGHTS
  Multi-provider LLM analysis
  Content insight extraction
  Context-aware processing
end note

note top of REPO
  Git repository analysis
  Commit pattern identification
  Architecture change tracking
end note

note top of UKB
  Knowledge base integration
  Entity creation & management
  Cross-system sync
end note

note top of WORKFLOW
  10-agent orchestration
  Sequential workflow execution
  Quality assurance coordination
  GraphDB persistence (no sync agent)
end note

note top of DIAGRAMS
  PlantUML generation
  Architecture visualization
  Documentation support
end note

note right of COORD_AGENT
  Orchestrates all 9 worker agents
  Manages sequential workflow
  Handles error recovery
  Initializes GraphDB adapter
  Provides quality coordination

  **3 agents use LLMs:**
  - Semantic Analysis (LLM)
  - Insight Generation (LLM)
  - Quality Assurance (LLM)
end note

legend bottom right
  |= Color |= Agent Type |
  | <back:#FFE6E6>   </back> | Uses LLMs |
  | <back:#E6F3FF>   </back> | No LLM |
  | <back:#FFE6CC>   </back> | Orchestrator |
endlegend

@enduml